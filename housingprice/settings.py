"""
Django settings for housingprice project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os, configparser




# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'h272zy($^(5!0cql-s7p(8mv3t$d6vxwfsyz*0qxtcmj%puzye'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


config = configparser.ConfigParser()
path_config_file = os.path.join(BASE_DIR, 'housingprice', 'myconfig.ini')
config.read(path_config_file)


ALLOWED_HOSTS = config.get('django', 'allow_host').split(",")




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth', # Authentication system
    'django.contrib.contenttypes', # Framework for content types
    'django.contrib.sessions', # A session framework
    'django.contrib.messages', # A messaging framework
    'django.contrib.staticfiles', # Framework for managing static files

    # Above applications are included by default as a convenience for common sense.

    'myapp.apps.MyappConfig', # If you follow this path, you'll see MyappConfig (Django probably created automatically)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'housingprice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'housingprice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config.get('database', "db_name"),
        'USER': config.get("database", "db_username"),
        'PASSWORD': config.get("database", "db_password"),
        'HOST': config.get("database", "db_host"),

    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC' # Best practice for storing information in database.
# Even if your website is only available in 1 time zone, best option is "UTC" because of daylight saving time. If you're working with local time, you'll encounter errors twice a year.

USE_I18N = True

USE_L10N = True

USE_TZ = False # False, so Django will not use timezone-aware datetimes.


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/


STATIC_URL = '/static/'
STATIC_ROOT = '/static/'
# STATICFILES_DIRS = [
#     "/static/"
# ]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '[{levelname}] {asctime}: {message}',
            'style': '{',
            # 'datefmt' : '%Y-%m-%d %H:%M:%S',
            'datefmt' : '%Y-%m-%d',
            #'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter':'standard', # this format 'standard' is defined above
        },
    },
    'root': {
        'handlers': ['console'], # this handler 'console' is defined above
        'level': 'INFO',
    },
}
